#include<iostream>
#include<string>
using namespace std;
#define max 1000

struct person
{
	string m_name;
	
	int m_sex;
	
	int m_age;
	
	string m_phone;
	
	string m_addr;

};

struct addressbooks
{
	struct person parr[max];
	
	int m_size;
};


//添加联系人
void addperson(addressbooks* abs)
{
	if (abs->m_size == max)//判断通讯录是否加满
	{
		cout << "最大用户限制为1000" << endl;
		return;
	}
	else
	{
		//姓名
		string name;
		cout << "请输入姓名" << endl;
		getline(cin,name);
		while(name.empty())
		{
			cout<<"姓名不能为空,请重新输入"<<endl;
			cin>>name;
		}
		abs->parr[abs->m_size].m_name = name;
		//性别
		cout << "请输入性别 1==男  2==女" << endl;
		int sex = 0;
		while (true)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->parr[abs->m_size].m_sex = sex;
				break;
			}
			cout << "输入有误请重新输入" << endl;
		}
		//年龄
		cout << "请输入年龄" << endl;
		int age = 0;
		while(true)
		{
			cin>>age;
			if(age > 0&&age < 200)
			{
				abs->parr[abs->m_size].m_age =age;
				break;
				
			}
			cout<<"年龄的范围为0到200,请重新输入"<<endl;
		}
		//电话 
		cout << "请输入电话" << endl;
		string  phone;
		cin >> phone;
		while(phone.empty()||phone.length()!=11)
		{
			cout<<"电话不能为空且长度必须为11位，请重新输入"<<endl;
			cin>>phone;
		}
		abs->parr[abs->m_size].m_phone = phone;
		
		//住址
		cout << "请输入住址" << endl;
		string address;
		cin >> address;
		abs->parr[abs->m_size].m_addr = address;
		//更新通讯录人数
		abs->m_size++;
		cout << "添加成功" << endl;
		system("pause");
		system("cls");//清屏
		
		
	}
}
//显示联系人
void   showperson(addressbooks* abs)
{
	//联系人是否为零
	if (abs->m_size == 0)
	{
		cout << "联系人不存在" << endl;
	}
	for (int i = 0; i < abs->m_size; i++)
	{
		cout << abs->parr[i].m_name << "\t";
		
		cout << (abs->parr[i].m_sex == 1 ? "男" : "女") << "\t";
		
		cout << abs->parr[i].m_age << "\t";
		
		//cout << abs->parr[i].m_phone << "\t";
		cout << abs->parr[i].m_phone << "\t";
		cout << abs->parr[i].m_addr << endl;
		
	}system("pause");
	system("cls");
}

void show()//创建菜单功能函数
{
	cout << "**********************" << endl;
	cout << "*****1.添加联系人*****" << endl;
	cout << "*****2.显示联系人*****" << endl;
	cout << "*****3.删除联系人*****" << endl;
	cout << "*****4.查找联系人*****" << endl;
	cout << "*****5.修改联系人*****" << endl;
	cout << "*****6.清空联系人*****" << endl;
	cout << "*****0.清空通讯录*****" << endl;
	cout << "**********************" << endl;
}
//查找联系人
int isexist(addressbooks* abs, string name)
{
	for (int i = 0; i < abs->m_size; i++)
	{
		if (abs->parr[i].m_name == name)
		{
			return i;
		}
	}
	return -1;
}
//删除联系人
void  deleteperaon(addressbooks* abs)
{
	cout << "请输入将要删除的联系人名字" << endl;
	string name;
	cin >> name;
	
	int ret = isexist(abs, name);//ret == -1 ret != -1
	if (ret != -1)
	{
		for (int i = ret; i < abs->m_size; i++)
		{
			abs->parr[i] = abs->parr[i + 1];
		}
		abs->m_size--;
		cout << "找到并删除" << endl;
	}
	else {
		cout << "未找到该联系人" << endl;
	}
	system("pause");
	system("cls");
}
//查找联系人
void findperson(addressbooks* abs)
{
	cout << "请输入你需要查找联系人的 名字" << endl;
	string name;
	cin >> name;
	int ret = isexist(abs, name);
	if (ret != -1)
	{
		cout << "姓名: " << abs->parr[ret].m_name << "\t";
		cout << "性别: " << (abs->parr[ret].m_sex == 1 ? "男" : "女") << "\t";
		cout << "年龄 " << abs->parr[ret].m_age << "\t";
		cout << "电话: " << abs->parr[ret].m_phone << "\t";
		cout << "住址: " << abs->parr[ret].m_addr << "\t";
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");
}
//修改联系人
void modifyperson(addressbooks* abs)
{
	cout << "输入你需要修改的联系人" << endl;
	string name;
	cin >> name;
	int ret = isexist(abs, name);
	if (ret != -1)
	{
		//姓名 
		string name;
		cout << "请输入修改后的姓名" << endl;
		cin >> name;
		while(name.empty())
		{
			cout<<"姓名不能为空，请重新输入"<<endl;
			cin>>name;
		}
		abs->parr[ret].m_name = name;
		//性别
		cout << "请输入修改后的性别 1==男  2==女" << endl;
		int sex = 0;
		while (true)
		{
			cin >> sex;
			if (sex == 1 || sex == 2)
			{
				abs->parr[abs->m_size].m_sex = sex;
				break;
			}
			cout << "输入有误请重新输入" << endl;
		}
		//年龄
		cout << "输入修改 后的年龄" << endl;
		int age = 0;
		while(true)
		{
			cin>>age;
			if(age > 0&&age<200)
			{
				abs->parr[ret].m_age = age;
				break;
			}
			cout<<"年龄需在0到200，请重新输入"<<endl;
		}
		
		//电话
		cout << "输入修改 后的电话" << endl;
		string phone;
		cin >> phone;
		while(phone.empty()||phone.length()!=11)
		{
			cout<<"电话不能为空且长度为11，请重新输入"<<endl;
			cin>>phone;
		}
		abs->parr[ret].m_phone = phone;
		//地址
		cout << "输入修改 后的地址" << endl;
		string address;
		cin >> address;
		abs->parr[ret].m_addr = address;
		cout << "修改成功" << endl;
	}
	else
	{
		cout << "查无此人" << endl;
	}
	system("pause");
	system("cls");
}
//清空联系人
void cleanperson(addressbooks* abs)
{
	abs->m_size = 0;
	cout << "联系人已经清空" << endl;
	system("pause");
	system("cls");
}
int main()
{
	
	addressbooks abs;
	
	abs.m_size = 0;//初始化通讯录
	
	int select = 0;
	
	while (true)
	{
		show();//调用菜单函数
		cin >> select;
		switch (select)
		{
		case 1:
			addperson(&abs);
			break;
		case 2:
			showperson(&abs);
			
			break;
		case 3:
			deleteperaon(&abs);
			break;
		case 4:
			findperson(&abs);
			break;
		case 5:
			modifyperson(&abs);
			break;
		case 6:
			cleanperson(&abs);
			break;
		case 0:
			cout << "感谢您的使用" << endl;
			system("pause");
			return 0;
			break;
		default:
			break;
		}
	}
	
	system("pause");
	return 0;
}
